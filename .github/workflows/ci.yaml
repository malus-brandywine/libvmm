name: CI

on:
  pull_request:
  push:
    branches: [ "main" ]

jobs:
  build_manual:
    name: Build VMM manual
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout seL4CP VMM repository
        uses: actions/checkout@v3
      - name: Install pandoc/latex via apt
        run: sudo apt update && sudo apt install -y pandoc texlive-latex-base texlive-fonts-recommended texlive-formats-extra
      - name: Convert manual from Markdown to PDF
        run: pandoc docs/MANUAL.md -f gfm -o MANUAL.pdf
      - name: Upload manual PDF
        uses: actions/upload-artifact@v3
        with:
          name: MANUAL
          path: MANUAL.pdf
  build_linux_x86_64:
    name: Build and run VMM examples (Linux x86-64)
    # Don't want any forks or PRs to run this workflow
    if: ${{ github.repository_owner == 'Ivan-Velickovic' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout seL4CP VMM repository
        uses: actions/checkout@v3
      - name: Download seL4CP SDK
        run: ./ci/acquire_sdk.sh sel4cp-sdk.zip ${{ secrets.GITHUB_TOKEN }} linux-x86-64
        shell: bash
      - name: Extract seL4CP SDK
        run: unzip sel4cp-sdk.zip && tar -xf sel4cp-sdk-1.2.6.tar.gz
      - name: Install VMM dependencies (via apt)
        # 'expect' is only a dependency for CI testing
        run: sudo apt update && sudo apt install -y make clang lld qemu-system-arm device-tree-compiler expect
      - name: Build and run VMM examples
        run: ./ci/examples.sh ${PWD}/sel4cp-sdk-1.2.6
        shell: bash
      - name: Upload built system images
        uses: actions/upload-artifact@v3
        with:
          # @ivanv: this needs to be fixed for the restructure
          path: build_*/loader.img
  build_macos_x86_64:
    name: Build and run VMM examples (macOS x86-64)
    # Don't want any forks or PRs to run this workflow
    if: ${{ github.repository_owner == 'Ivan-Velickovic' }}
    runs-on: macos-12
    steps:
      - name: Checkout seL4CP VMM repository
        uses: actions/checkout@v3
      - name: Download seL4CP SDK
        run: ./ci/acquire_sdk.sh sel4cp-sdk.zip ${{ secrets.GITHUB_TOKEN }} macos-x86-64
        shell: bash
      - name: Extract seL4CP SDK
        run: unzip sel4cp-sdk.zip && tar -xf sel4cp-sdk-1.2.6.tar.gz
      - name: Install VMM dependencies (via Homebrew)
        # 'expect' is only a dependency for CI testing
        run: |
          brew install llvm qemu dtc make expect
          echo "/usr/local/opt/llvm/bin:$PATH" >> $GITHUB_PATH
      - name: Build and run VMM examples
        run: ./ci/examples.sh ${PWD}/sel4cp-sdk-1.2.6
        shell: bash
      - name: Upload built system images
        uses: actions/upload-artifact@v3
        with:
          path: build_*/loader.img
  build_linux_x86_64_nix:
    name: Build and run VMM examples (Linux x86-64 via Nix)
    # Don't want any forks or PRs to run this workflow
    if: ${{ github.repository_owner == 'Ivan-Velickovic' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout seL4CP VMM repository
        uses: actions/checkout@v3
      - name: Download seL4CP SDK
        run: ./ci/acquire_sdk.sh sel4cp-sdk.zip ${{ secrets.GITHUB_TOKEN }} linux-x86-64
        shell: bash
      - name: Extract seL4CP SDK
        run: unzip sel4cp-sdk.zip && tar -xf sel4cp-sdk-1.2.6.tar.gz
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Build and run VMM examples
        run: nix-shell --pure --run "./ci/examples.sh ${PWD}/sel4cp-sdk-1.2.6"
      - name: Upload built system images
        uses: actions/upload-artifact@v3
        with:
          path: build_*/loader.img
